# [PackageDev] target_format: plist, ext: tmLanguage
name: Beancount
scopeName: source.beancount
fileTypes: [beancount]
uuid: dbf28879-ee4d-497e-a678-a5c5a5e8d74f


patterns:
- comment: Comments
  name: comment.line.beancount
  match:  ;.*

- comment: Tag directive (no date, no string, tag, no meta, no ops)
  name: meta.directive.tag.beancount
  match: ^(poptag|pushtag)\s+(#)([A-Za-z0-9\-_/.]+)\s*\n
  captures:
    '1': {name: keyword.operator.directive.beancount}
    '2': {name: keyword.operator.tag.beancount}
    '3': {name: string.unquoted.tag.beancount}

- comment: Account
  begin: ([A-Z][A-Za-z0-9\-]+)(:)
  beginCaptures:
    '1': {name: constant.language.beancount}
    '2': {name: punctuation.separator.beancount}
  patterns:
  - comment: Sub accounts
    begin: ([A-Z][A-Za-z0-9\-]+)([:]?)
    beginCaptures:
      '1': {name: variable.account.beancount}
      '2': {name: punctuation.separator.beancount}
    patterns:
    - {include: '$self'}
    end: ([:]?)|(\s)
  end: \s

- comment: strings
  name: string.quoted.double.beancount
  begin: \"
  patterns:
  - name: constant.character.escape.beancount
    match: \\.
  end: \"

- comment: Option directives, no date, no meta
  name: meta.directive.option.beancount
  match: ^(option)\s*(\".*\")\s*(\".*\")\s*
  captures:
    '1': {name: support.function.directive.option.beancount}
    '2': {name: support.variable.language.option.beancount}
    '3': {name: support.class.option.beancount}

- comment: Directives (no date)
  name: keyword.operator.directive.beancount
  match: ^(include|plugin)\s

- comment: Dated directives
  match: ([0-9]{4})[\-|/]([0-9]{2})[\-|/]([0-9]{2})\s(open|close|pad|balance|note|price|event|document|commodity)
  captures:
    '1': {name: constant.numeric.date.year.beancount}
    '2': {name: constant.numeric.date.month.beancount}
    '3': {name: constant.numeric.date.day.beancount}
    '4': {name: support.function.directive.beancount}
# FIXME: this violates DRY
- comment: metadata
  match: \s\s([a-z][A-Za-z0-9\-]+)[:]\s
  name: keyword.operator.directive.beancount

- comment: Transactions
  match: ([0-9]{4}[\-|/][0-9]{2}[\-|/][0-9]{2})\s((txn)|\*|\!)\s(".*?")(\s+".*?")?((\s*#[a-zA-z\-]+)*)(\s*;.*)?
  captures:
    '1': {name: constant.numeric.date.beancount}
    '2': {name: support.function.directive.beancount}
    '4': {name: string.quoted.tiers.beancount}
    '5': {name: string.quoted.narration.beancount}
    '6': {name: keyword.operator.tags.beancount}
    '8': {name: comment.line.beancount}


- comment: flag
  name: keyword.other.beancount
  match: \s\!

- comment: Price assignment
  name: keyword.operator.assignment.beancount
  match: \@


- comment: cost assignment
  begin: (\{)
  beginCaptures:
    '1': {name: keyword.operator.assignment.beancount}
  patterns:
  - name: keyword.operator.assignment.beancount
    match:  \/
  end: (\})
  endCaptures:
    '1': {name: keyword.operator.assignment.beancount}

- comment: Tags and links
  match: (#)([A-Za-z0-9\-_/.]+)
  captures:
    '1': {name: keyword.operator.tag.beancount}
    '2': {name: string.unquoted.tag.beancount}

- comment: Links
  match: (\^)([A-Za-z0-9\-_/.]+)
  captures:
    '2': {name: string.unquoted.link.beancount}

- comment: numbers
  match: ([\-|\+]?)([\d]+[\.]?[\d]*)\s?([A-Z][A-Z0-9\-]{0,10})
  captures:
    '1': {name: keyword.operator.modifier.beancount}
    '2': {name: constant.numeric.currency.beancount}
    '3': {name: variable.other.currency.beancount}

- comment: Illegal
  name: invalid.illegal.unrecognized.beancount
  match: '[^\s}]'
